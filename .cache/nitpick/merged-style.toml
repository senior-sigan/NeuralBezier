[nitpick]
minimum_version = "0.10.0"

["package.json"]
contains_keys = [ "name", "version", "repository.type", "repository.url", "release.plugins",]

["pre-commit-config.yaml"]
[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.0.0\n    hooks:\n      - id: debug-statements\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v2.4.1\n    hooks:\n      - id: pyupgrade\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.5.1\n    hooks:\n      - id: python-check-blanket-noqa\n      - id: python-check-mock-methods\n      - id: python-no-eval\n      - id: python-no-log-warn\n      - id: rst-backticks\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/openstack/bashate\n    rev: 2.0.0\n    hooks:\n      - id: bashate\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook\n    rev: v2.2.2\n    hooks:\n      - id: commitlint\n        stages: [commit-msg]\n        additional_dependencies: ['@commitlint/config-conventional']\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/python/black\n    rev: 19.10b0\n    hooks:\n      - id: black\n        args: [--safe, --quiet]\n  - repo: https://github.com/asottile/blacken-docs\n    rev: v1.7.0\n    hooks:\n      - id: blacken-docs\n        additional_dependencies: [black==19.10b0]\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://gitlab.com/pycqa/flake8\n    rev: 3.8.1\n    hooks:\n      - id: flake8\n        additional_dependencies: [flake8-blind-except, flake8-bugbear, flake8-comprehensions,\n          flake8-debugger, flake8-docstrings, flake8-isort, flake8-polyfill,\n          flake8-pytest, flake8-quotes, yesqa]\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/asottile/seed-isort-config\n    rev: v2.1.1\n    hooks:\n      - id: seed-isort-config\n  - repo: https://github.com/pre-commit/mirrors-isort\n    rev: v4.3.21\n    hooks:\n      - id: isort\n"

[["pre-commit-config.yaml".repos]]
yaml = "  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v0.770\n    hooks:\n      - id: mypy\n"

[nitpick.JSONFile]
file_names = [ "package.json",]

[nitpick.styles]
include = [ "styles/python37", "styles/poetry", "styles/absent-files", "styles/pre-commit/main", "styles/pre-commit/general", "styles/pre-commit/python", "styles/pre-commit/bash", "styles/pre-commit/commitlint", "styles/black", "styles/flake8", "styles/pylint", "styles/isort", "styles/mypy", "styles/pytest", "styles/ipython", "styles/package-json",]

["package.json".contains_json]
commitlint = "  {\n    \"extends\": [\n      \"@commitlint/config-conventional\"\n    ]\n  }\n"

["setup.cfg".flake8]
exclude = ".tox,build"
ignore = "D107,D202,D203,D401,E203,E402,E501,W503"
inline-quotes = "double"
max-line-length = 120

["setup.cfg".isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "tests"
line_length = 120
multi_line_output = 3
skip = ".tox,build"

["setup.cfg".mypy]
follow_imports = "skip"
ignore_missing_imports = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true

[nitpick.files.absent]
".isort.cfg" = "Move values to setup.cfg, section [isort]"
".pyup.yml" = "Configure .travis.yml with safety instead: https://github.com/pyupio/safety#using-safety-with-a-ci-service"
".venv" = ""
Pipfile = "Use pyproject.toml instead"
"Pipfile.lock" = "Use pyproject.toml instead"
"requirements.txt" = "Install poetry, run 'poetry init' to create pyproject.toml, and move dependencies to it"

[nitpick.files.present]
".pre-commit-config.yaml" = "Create the file with the contents below, then run 'pre-commit install'"
"pyproject.toml" = "Install poetry and run 'poetry init' to create it"

[nitpick.files."setup.cfg"]
comma_separated_values = [ "flake8.ignore", "flake8.exclude", "isort.skip", "isort.known_first_party",]

["pyproject.toml".tool.black]
line-length = 120

["pyproject.toml".tool.poetry.dependencies]
python = "^3.7"

["pyproject.toml".tool.poetry.dev-dependencies]
ipdb = "*"
ipython = "*"
pylint = "*"
